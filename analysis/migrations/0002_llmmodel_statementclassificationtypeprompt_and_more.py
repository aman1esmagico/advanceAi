# Generated by Django 5.0.4 on 2024-05-17 00:13

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='llmModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ibm_name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StatementClassificationTypePrompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('OPENING', 'Opening'), ('QUESTIONING', 'Questioning'), ('PRESENTING', 'Presenting'), ('CLOSING_OUTCOME', 'Closing & Outcome')], max_length=20, unique=True)),
                ('definition', models.TextField()),
                ('examples', models.TextField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatementLevelPrompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('OPENING', 'Opening'), ('QUESTIONING', 'Questioning'), ('PRESENTING', 'Presenting'), ('CLOSING', 'Closing'), ('OUTCOME', 'Outcome')], max_length=20, unique=True)),
                ('objective', models.TextField()),
                ('evaluation_criteria', models.TextField()),
                ('score_assignment_criteria', models.TextField()),
                ('instruction', models.TextField()),
                ('examples', models.TextField()),
                ('notes', models.TextField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='transcription',
            name='segments',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None),
        ),
        migrations.CreateModel(
            name='FinalStatementWithLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('OPENING', 'Opening'), ('QUESTIONING', 'Questioning'), ('PRESENTING', 'Presenting'), ('CLOSING', 'Closing'), ('OUTCOME', 'Outcome')], max_length=20)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('confidence_score', models.TextField(blank=True, null=True)),
                ('reason_for_level', models.TextField(blank=True, null=True)),
                ('statement', models.TextField()),
                ('transcription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.transcription')),
            ],
        ),
        migrations.CreateModel(
            name='StatementClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('segment_number', models.IntegerField(blank=True, default=-1, null=True)),
                ('category', models.CharField(choices=[('OPENING', 'Opening'), ('QUESTIONING', 'Questioning'), ('PRESENTING', 'Presenting'), ('CLOSING_OUTCOME', 'Closing & Outcome')], max_length=20)),
                ('statement', models.TextField()),
                ('levelDone', models.BooleanField(default=False)),
                ('transcription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.transcription')),
            ],
        ),
        migrations.DeleteModel(
            name='Classification',
        ),
    ]
